{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dev-adf-projectyash"
		},
		"ls_azuredatabricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'ls_azuredatabricks'"
		},
		"ls_Onprem_sql_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_Onprem_sql'"
		},
		"ls_SqlServer_df_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_SqlServer_df'"
		},
		"ls_azuredatabricks_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0911-124821-d65h37h"
		},
		"ls_gen2yash0507_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gen2yash0507.dfs.core.windows.net/"
		},
		"ls_projectgen2yash_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://projectgen2yash.dfs.core.windows.net/"
		},
		"ls_Onprem_sql_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "DESKTOP-BEA2E83\\SQLEXPRESS"
		},
		"ls_Onprem_sql_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "RetailPOS"
		},
		"ls_Onprem_sql_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sa"
		},
		"ls_SqlServer_df_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "DESKTOP-BEA2E83\\SQLEXPRESS"
		},
		"ls_SqlServer_df_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "RetailPOS"
		},
		"ls_SqlServer_df_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sa"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_azuredatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-2341365570781578.18.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('ls_azuredatabricks_accessToken')]"
					},
					"existingClusterId": "[parameters('ls_azuredatabricks_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_gen2yash0507')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_gen2yash0507_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_projectgen2yash')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_projectgen2yash_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IR-Onprem-SQLserver')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"selfContainedInteractiveAuthoringEnabled": true
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_invoice_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2yash0507",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "online_retail_invoice",
						"fileSystem": "invoicedata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2yash0507')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink_invoice')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_projectgen2yash",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Invoice",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_projectgen2yash')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink_sql_tables_to_adls')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_projectgen2yash",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder_name",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_projectgen2yash')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_tablesmetadata_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_projectgen2yash",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "tablesmetadata",
						"fileSystem": "metafile"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_projectgen2yash')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_bronze_invoice_latest_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_projectgen2yash",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": "Invoice",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_projectgen2yash')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_invoice_bronze_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_projectgen2yash",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Invoice",
						"fileSystem": "bronze"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_projectgen2yash')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_metadata_sqltable_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_projectgen2yash",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sqltablesmetadat.json",
						"fileSystem": "metafile"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"table_name": {
							"type": "string"
						},
						"key_columns": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_projectgen2yash')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_Onprem_sql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('ls_Onprem_sql_properties_typeProperties_server')]",
					"database": "[parameters('ls_Onprem_sql_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_Onprem_sql_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_Onprem_sql_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IR-Onprem-SQLserver",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-Onprem-SQLserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_SqlServer_df')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('ls_SqlServer_df_properties_typeProperties_server')]",
					"database": "[parameters('ls_SqlServer_df_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_SqlServer_df_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_SqlServer_df_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IR-Onprem-SQLserver",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-Onprem-SQLserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest invoice csv files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Invoice Csv To Adls",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "filepath",
										"value": "gen2yash0507/invoicedata"
									},
									{
										"name": "ingestion_date",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Invoice",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Invoice",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "StockCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StockCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Quantity",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "InvoiceDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "InvoiceDate",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Price",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Customer ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CustomerID",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "filepath",
											"type": "String"
										},
										"sink": {
											"name": "Filepath",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "ingestion_date",
											"type": "String"
										},
										"sink": {
											"name": "IngestionDate",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_invoice_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sink_invoice",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "email alert",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy Invoice Csv To Adls",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-01.northcentralus.logic.azure.com:443/workflows/0296cc18d85b40a18c6d76e30402e6c6/triggers/When_an_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_an_HTTP_request_is_received%2Frun&sv=1.0&sig=Hu9VMVWkrwwetK3SyTvVa7M_tS4CTw7laDY5Hjueb4U",
							"body": {
								"value": "{\n    \"pipelinename\": \"@{pipeline().Pipeline}\"\n    \"adf workspace\": \"@{pipeline().DataFactory}\"\n    \"Error Message\": \"@{activity('Copy Invoice Csv To Adls').output.Error.Message}\"\n    \"RunId\": \"@{pipeline().RunId}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Delete src file",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy Invoice Csv To Adls",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_invoice_csv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": false,
								"wildcardFileName": "*.csv",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Ingestion"
				},
				"annotations": [],
				"lastPublishTime": "2025-09-05T19:51:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_invoice_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_sink_invoice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_notebooks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Notebook_Setup_and_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ls_metadata_sqltable_json",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 3,
							"activities": [
								{
									"name": "notebook_dim_tables_bronze_to_silver",
									"description": "CustomerList,CountryList and ProductPricesBy year full load to silver",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/RetailPOS_Project/transformations/02.dim_tables_bronze_to_silver",
										"baseParameters": {
											"folder_name": {
												"value": "@item().table_name",
												"type": "Expression"
											},
											"key_columns": {
												"value": "@item().key_columns",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_azuredatabricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Notebook_Setup_and_Config",
						"description": "Setup_and_Config notebooks",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/RetailPOS_Project/master_notebook_setup"
						},
						"linkedServiceName": {
							"referenceName": "ls_azuredatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ls_invoice_bronze_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metadata of each file",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ls_bronze_invoice_latest_parquet",
											"type": "DatasetReference",
											"parameters": {
												"file_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"lastModified",
											"itemName"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "ParquetReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata of each file",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('Get Metadata of each file').output.lastModified,variables('Refdatetime'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Set latest file time",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "Refdatetime",
													"value": {
														"value": "@activity('Get Metadata of each file').output.lastModified",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set latest file",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Set latest file time",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "latestfile",
													"value": {
														"value": "@activity('Get Metadata of each file').output.itemName",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Notebook_fact_Invoice",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ForEach2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/RetailPOS_Project/transformations/01.invoice_fact_bronze_to_silver",
							"baseParameters": {
								"file_name": {
									"value": "@variables('latestfile')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_azuredatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Notebook_gold_tables_master",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Notebook_fact_Invoice",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/RetailPOS_Project/master_notebook_gold_tables"
						},
						"linkedServiceName": {
							"referenceName": "ls_azuredatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"latestfile": {
						"type": "String"
					},
					"Refdatetime": {
						"type": "String",
						"defaultValue": "1900-01-01 00:00:00"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ls_metadata_sqltable_json')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_azuredatabricks')]",
				"[concat(variables('factoryId'), '/datasets/ls_invoice_bronze_folder')]",
				"[concat(variables('factoryId'), '/datasets/ls_bronze_invoice_latest_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_server_tables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_Onprem_sql",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table_name": {
						"type": "string"
					},
					"schema_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema_name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_Onprem_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest tables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Table Names",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_tablesmetadata_json",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachtable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Table Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Table Names').output.value",
								"type": "Expression"
							},
							"batchCount": 3,
							"activities": [
								{
									"name": "Copy sql tables",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ingestion_date",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												},
												{
													"name": "file_path",
													"value": {
														"value": "@concat('RetailPOS.',item().schema,'.',item().table)",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_sql_server_tables",
											"type": "DatasetReference",
											"parameters": {
												"table_name": {
													"value": "@item().table",
													"type": "Expression"
												},
												"schema_name": {
													"value": "@item().schema",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_sink_sql_tables_to_adls",
											"type": "DatasetReference",
											"parameters": {
												"folder_name": {
													"value": "@item().table",
													"type": "Expression"
												},
												"file_name": {
													"value": "@concat(item().table,'.parquet')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "email alert",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Copy sql tables",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {},
										"url": "https://prod-01.northcentralus.logic.azure.com:443/workflows/0296cc18d85b40a18c6d76e30402e6c6/triggers/When_an_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_an_HTTP_request_is_received%2Frun&sv=1.0&sig=Hu9VMVWkrwwetK3SyTvVa7M_tS4CTw7laDY5Hjueb4U",
										"body": {
											"value": "{\n    \"pipelinename\": \"@{pipeline().Pipeline}\"\n    \"adf workspace\": \"@{pipeline().DataFactory}\"\n    \"Error Message\": \"@{activity('Copy sql tables').output.Error.Message}\"\n    \"RunId\": \"@{pipeline().RunId}\"\n}",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Ingestion"
				},
				"annotations": [],
				"lastPublishTime": "2025-09-10T20:37:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_tablesmetadata_json')]",
				"[concat(variables('factoryId'), '/datasets/ds_sql_server_tables')]",
				"[concat(variables('factoryId'), '/datasets/ds_sink_sql_tables_to_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_to_bronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute pl invoice csv",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Ingest invoice csv files",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute pl sql tables",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Ingest tables",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Ingestion"
				},
				"annotations": [],
				"lastPublishTime": "2025-09-05T13:48:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Ingest invoice csv files')]",
				"[concat(variables('factoryId'), '/pipelines/Ingest tables')]"
			]
		}
	]
}